build:
  box: python
  steps:
    - script:
      name: echo
      code: |
        echo "hello"

push-debug-ecr:
  box: python
  steps:
    - script:
      name: foo
      code: |
        echo "foo"
    # - internal/docker-push:
    #     aws-access-key: $AWS_ACCESS_KEY_ID
    #     aws-secret-key: $AWS_SECRET_ACCESS_KEY
    #     aws-region: $AWS_REGISTRY_REGION
    #     aws-registry-id: $AWS_REGISTRY_ID_NGINX
    #     repository: tagmatch-nginx
    #     tag: debug-$WERCKER_GIT_BRANCH

container-transform:
  box:
    id: python:3-alpine
    cmd: /bin/sh
  steps:
    - script:
      name: foo
      code: |
        echo "foo"
    # - script:
    #   name: convert config file from docker-compose to ecs
    #   code: |
    #     pip install container-transform
    #     echo $(which container-transform)
    #     cat docker-compose.yml | container-transform -v -i compose -o ecs > ecs.json

check-transform:
  box: python
  steps:
    - script:
      name: foo
      code: |
        if [ -e ecs.json ]; then cat ecs.json; fi

deploy-to-ecs:
  box: python:2.7-slim
  steps:
    - script:
      name: foo
      code: |
        echo "foo"

    # - 1science/aws-ecs:
    #   key: $AWS_ACCESS_KEY_ID
    #   secret: $AWS_SECRET_ACCESS_KEY
    #   region: $AWS_ECS_REGION
    #   cluster-name: tagmatch
    #   service-name: tagmatch
    #   task-definition-name: tagmatch
    #   task-definition-file: $WERCKER_SOURCE_DIR/ecs.json

# push-release-ecr:
#   box:
#     id: nginx:alpine
#     cmd: /bin/sh
#   steps:
#     - script:
#         name: mv static files
#         code: |
#           rm -rf /usr/share/nginx/html/*
#           cp -Rp $WERCKER_SOURCE_DIR/* /usr/share/nginx/html
#     - internal/docker-push:
#         disable-sync: true
#         aws-access-key: $AWS_ACCESS_KEY_ID
#         aws-secret-key: $AWS_SECRET_ACCESS_KEY
#         aws-region: us-west-2
#         aws-registry-id: $AWS_REGISTRY_ID
#         repository: workflows-demo
#         tag: $WERCKER_GIT_BRANCH
#         cmd: nginx -g 'daemon off;'
#
